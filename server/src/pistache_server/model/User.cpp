/**
* Pet project for tasks managment
* Declare Api between chat bot and server part
*
* OpenAPI spec version: 0.0.1
* Contact: bolik-u13@mail.ru
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/


#include "User.h"

namespace io {
namespace swagger {
namespace server {
namespace model {

User::User()
{
    m_Username = "";
    m_UsernameIsSet = false;
    m_FirstName = "";
    m_FirstNameIsSet = false;
    m_LastName = "";
    m_LastNameIsSet = false;
    m_Email = "";
    m_EmailIsSet = false;
    m_Phone = "";
    m_PhoneIsSet = false;
    
}

User::~User()
{
}

void User::validate()
{
    // TODO: implement validation
}

nlohmann::json User::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_UsernameIsSet)
    {
        val["username"] = ModelBase::toJson(m_Username);
    }
    if(m_FirstNameIsSet)
    {
        val["firstName"] = ModelBase::toJson(m_FirstName);
    }
    if(m_LastNameIsSet)
    {
        val["lastName"] = ModelBase::toJson(m_LastName);
    }
    if(m_EmailIsSet)
    {
        val["email"] = ModelBase::toJson(m_Email);
    }
    if(m_PhoneIsSet)
    {
        val["phone"] = ModelBase::toJson(m_Phone);
    }
    

    return val;
}

void User::fromJson(nlohmann::json& val)
{
    if(val.find("username") != val.end())
    {
        setUsername(val.at("username"));
        
    }
    if(val.find("firstName") != val.end())
    {
        setFirstName(val.at("firstName"));
        
    }
    if(val.find("lastName") != val.end())
    {
        setLastName(val.at("lastName"));
        
    }
    if(val.find("email") != val.end())
    {
        setEmail(val.at("email"));
        
    }
    if(val.find("phone") != val.end())
    {
        setPhone(val.at("phone"));
        
    }
    
}


std::string User::getUsername() const
{
    return m_Username;
}
void User::setUsername(std::string value)
{
    m_Username = value;
    m_UsernameIsSet = true;
}
bool User::usernameIsSet() const
{
    return m_UsernameIsSet;
}
void User::unsetUsername()
{
    m_UsernameIsSet = false;
}
std::string User::getFirstName() const
{
    return m_FirstName;
}
void User::setFirstName(std::string value)
{
    m_FirstName = value;
    m_FirstNameIsSet = true;
}
bool User::firstNameIsSet() const
{
    return m_FirstNameIsSet;
}
void User::unsetFirstName()
{
    m_FirstNameIsSet = false;
}
std::string User::getLastName() const
{
    return m_LastName;
}
void User::setLastName(std::string value)
{
    m_LastName = value;
    m_LastNameIsSet = true;
}
bool User::lastNameIsSet() const
{
    return m_LastNameIsSet;
}
void User::unsetLastName()
{
    m_LastNameIsSet = false;
}
std::string User::getEmail() const
{
    return m_Email;
}
void User::setEmail(std::string value)
{
    m_Email = value;
    m_EmailIsSet = true;
}
bool User::emailIsSet() const
{
    return m_EmailIsSet;
}
void User::unsetEmail()
{
    m_EmailIsSet = false;
}
std::string User::getPhone() const
{
    return m_Phone;
}
void User::setPhone(std::string value)
{
    m_Phone = value;
    m_PhoneIsSet = true;
}
bool User::phoneIsSet() const
{
    return m_PhoneIsSet;
}
void User::unsetPhone()
{
    m_PhoneIsSet = false;
}

}
}
}
}

